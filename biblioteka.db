-- Tworzenie bazy danych
USE master
CREATE DATABASE [Biblioteka_g2];
GO
USE [Biblioteka_g2];

CREATE TABLE country (
	country_id INT IDENTITY (1,1),
	country VARCHAR(20) NOT NULL,
	country_short VARCHAR(3) NOT NULL
	CONSTRAINT PK_country_country_id PRIMARY KEY CLUSTERED (country_id)
)

CREATE TABLE [status] (
	status_id INT IDENTITY(1,1) PRIMARY KEY,
	status_name varchar(50) NOT NULL,
	status_desc varchar(200),
	status_type varchar(50), -- typ statusu
	[status] BIT -- akrtywny, nieakrywny
)


-- Tabela Authors (Autorzy)
CREATE TABLE authors (
    author_id INT IDENTITY(1,1) PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    birth_date DATE,
	country_id INT NOT NULL DEFAULT 1,
    biography VARCHAR(MAX),
	FOREIGN KEY (country_id) REFERENCES country(country_id) 
);


-- Tabela Books (Książki)
IF NOT EXISTS (SELECT 1 FROM [INFORMATION_SCHEMA].[TABLES] WHERE TABLE_NAME ='books' )
CREATE TABLE books (
    book_id INT IDENTITY(1,1) PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    isbn VARCHAR(20) UNIQUE,
    publication_year INT,
    publisher VARCHAR(100),
    genre VARCHAR(50),
    available_copies INT DEFAULT 1,
    total_copies INT DEFAULT 1,
	status_id INT NOT NULL,
	FOREIGN KEY ([status_id]) REFERENCES [status]([status_id])
);

-- Tabela łącząca Authors i Books (AutorzyKsiążek)
CREATE TABLE authorsBooks (
    --author_book_id INT IDENTITY(1,1) PRIMARY KEY,
    author_id INT NOT NULL,
    book_id INT NOT NULL,
    FOREIGN KEY (author_id) REFERENCES authors(author_id),
    FOREIGN KEY (book_id) REFERENCES books(book_id),
    --UNIQUE (author_id, book_id)
	CONSTRAINT PK_authorsBooks_author_id_book_id PRIMARY KEY CLUSTERED (author_id,book_id)
);

-- Tabela User (Użytkownicy systemu)
CREATE TABLE [user] (
    [user_id] INT IDENTITY(1,1) PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    [role] VARCHAR(20) CHECK ([role] in ('admin', 'librarian', 'user')),
    created_at DATETIME DEFAULT GETDATE(),
    last_login DATETIME,
	status_id INT NOT NULL,
	FOREIGN KEY ([status_id]) REFERENCES [status]([status_id])
);

--ALTER TABLE dbo.[User]
--ADD CONSTRAINT DF_wlasna_nazwa_constrain_role CHECK ([role] in ('admin', 'librarian', 'user'))
--GO



-- Tabela Czytelnicy (Czytelnicy biblioteki)
CREATE TABLE readers (
    readers_id INT IDENTITY(1,1) PRIMARY KEY,
    user_id INT NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    [address] VARCHAR(100),
    phone VARCHAR(20),
    registration_date DATE DEFAULT GETDATE(),
	status_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES [User](user_id),
	FOREIGN KEY ([status_id]) REFERENCES [status]([status_id])
);

-- Tabela Wypożyczenia (Wypożyczenia książek)
CREATE TABLE borrowing (
    borrowing_id INT IDENTITY(1,1) PRIMARY KEY,
    book_id INT NOT NULL,
    readers_id INT NOT NULL,
    borrowing_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    return_date DATETIME,
    due INT NOT NULL,
    [status] varchar(20) CHECK ([status] in ('wypożyczona', 'zwrócona', 'przetrzymana')) DEFAULT 'wypożyczona',
	[status_id] INT NOT NULL,
    FOREIGN KEY (book_id) REFERENCES books(book_id),
    FOREIGN KEY (readers_id) REFERENCES readers(readers_id),
	FOREIGN KEY ([status_id]) REFERENCES [status]([status_id])
);

-- Tabela Rezerwacja (Rezerwacje książek)
CREATE TABLE dbo.reservation (
    reservation_id INT IDENTITY(1,1) PRIMARY KEY,
    book_id INT NOT NULL,
    readers_id INT NOT NULL,
    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,
	--[status] varchar(20) CHECK ([status] in ('aktywna', 'zrealizowana', 'anulowana')) DEFAULT 'aktywna',
	[status_id] INT NOT NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (readers_id) REFERENCES readers(readers_id),
	FOREIGN KEY ([status_id]) REFERENCES [status]([status_id])
);
-- CREATE INDEX index1 ON schema1.table1 (column1);
CREATE INDEX IX_reservation_book_is ON dbo.reservation(book_id)
	



-- Tabela kary (Kary za przetrzymanie)
CREATE TABLE fine (
    fine_id INT IDENTITY(1,1) PRIMARY KEY,
    borrowing_id INT NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    date_issue DATETIME DEFAULT CURRENT_TIMESTAMP,
    date_pay DATETIME,
	--[status] varchar(20) CHECK ([status] in ('naliczona', 'opłacona', 'umorzona')) DEFAULT 'naliczona',
	[status_id] INT NOT NULL
    FOREIGN KEY (borrowing_id) REFERENCES borrowing(borrowing_id),
	FOREIGN KEY ([status_id]) REFERENCES [status]([status_id])
);




--INSERT INTO nazwa (kolumna) VALUES (wartosc)
INSERT INTO dbo.[status] ([status_name],[status_desc],[status_type],[status])
VALUES ('Dostępna','Książka jest dostępna w bibliotece','books',1)

INSERT INTO dbo.[status] ([status_name],[status_type],[status])
VALUES ('Niedostepna','books',1),
('Aktywny','users',1),
('Nieaktywny','users',1)


SELECT * FROM dbo.status 
INSERT INTO books (title, isbn, publication_year, publisher, genre, available_copies, total_copies, status_id)
VALUES
('Władca Pierścieni: Drużyna Pierścienia', '978-83-7180-179-0', 1954, 'Amber', 'Fantasy', 3, 5, 1),
('Władca Pierścieni: Dwie Wieże', '978-83-7180-180-6', 1954, 'Amber', 'Fantasy', 2, 4, 1),
('Władca Pierścieni: Powrót Króla', '978-83-7180-181-3', 1955, 'Amber', 'Fantasy', 1, 3, 1),
('Hobbit', '978-83-274-2347-1', 1937, 'Iskry', 'Fantasy', 4, 6, 1),
('Zbrodnia i kara', '978-83-08-06099-5', 1866, 'Znak', 'Klasyka', 2, 3, 1),
('Mistrz i Małgorzata', '978-83-07-03316-4', 1967, 'Czytelnik', 'Fantastyka', 1, 2, 2),
('Lalka', '978-83-07-03405-5', 1890, 'PIW', 'Klasyka', 0, 2, 2),
('1984', '978-83-07-03276-1', 1949, 'Muza', 'Dystopia', 3, 4, 1),
('Folwark zwierzęcy', '978-83-07-03315-7', 1945, 'Muza', 'Dystopia', 2, 3, 1),
('Harry Potter i Kamień Filozoficzny', '978-83-7510-478-2', 1997, 'Media Rodzina', 'Fantasy', 5, 8, 1),
('Harry Potter i Komnata Tajemnic', '978-83-7510-479-9', 1998, 'Media Rodzina', 'Fantasy', 4, 7, 1),
('Harry Potter i Więzień Azkabanu', '978-83-7510-480-5', 1999, 'Media Rodzina', 'Fantasy', 3, 6, 1),
('Gra o tron', '978-83-7578-255-8', 1996, 'Zysk i S-ka', 'Fantasy', 0, 3, 2),
('Starcie królów', '978-83-7578-256-5', 1998, 'Zysk i S-ka', 'Fantasy', 1, 3, 1),
('Nawałnica mieczy', '978-83-7578-257-2', 2000, 'Zysk i S-ka', 'Fantasy', 1, 2, 1),
('Duma i uprzedzenie', '978-83-08-06415-3', 1813, 'Znak', 'Romans', 2, 3, 1),
('Wichrowe Wzgórza', '978-83-08-06342-2', 1847, 'Znak', 'Klasyka', 1, 2, 1),
('Złodziejka książek', '978-83-240-2273-4', 2005, 'Nasza Księgarnia', 'Historyczna', 3, 5, 1),
('Cień wiatru', '978-83-247-1365-8', 2001, 'Muza', 'Kryminał', 2, 4, 1),
('Millennium: Mężczyźni, którzy nienawidzą kobiet', '978-83-7414-837-1', 2005, 'Czarna Owca', 'Kryminał', 1, 3, 1),
('Millennium: Dziewczyna, która igrała z ogniem', '978-83-7414-838-8', 2006, 'Czarna Owca', 'Kryminał', 0, 2, 2),
('Millennium: Zamek z piasku, który runął', '978-83-7414-839-5', 2007, 'Czarna Owca', 'Kryminał', 1, 2, 1),
('Mały Książę', '978-83-240-0657-4', 1943, 'Znak', 'Dla dzieci', 5, 10, 1),
('Ania z Zielonego Wzgórza', '978-83-10-12660-1', 1908, 'Nasza Księgarnia', 'Dla młodzieży', 4, 7, 1),
('Solaris', '978-83-08-05344-7', 1961, 'Wydawnictwo Literackie', 'Science Fiction', 2, 4, 1),
('Opowieści z Narnii: Lew, Czarownica i stara szafa', '978-83-7510-481-2', 1950, 'Media Rodzina', 'Fantasy', 3, 6, 1),
('Opowieści z Narnii: Książę Kaspian', '978-83-7510-482-9', 1951, 'Media Rodzina', 'Fantasy', 2, 5, 1),
('Pan Tadeusz', '978-83-08-06233-3', 1834, 'Znak', 'Poezja', 4, 6, 1),
('Ferdydurke', '978-83-07-03317-1', 1937, 'PIW', 'Klasyka', 1, 3, 1),
('Kod Leonarda da Vinci', '978-83-7319-585-9', 2003, 'Sonia Draga', 'Thriller', 2, 5, 1);
